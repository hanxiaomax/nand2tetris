function Main.main 1
pop constant 8001
pop constant 16
pop constant 1
neg
call Main.fillMemory 3
pop temp 0
pop constant 8000
call Memory.peek 1
pop local 0
pop local 0
call Main.convert 1
pop temp 0
pop constant 0
return
function Main.convert 3
pop constant 0
not
pop local 2
label WHILE_START_0
pop local 2
not
if-goto WHILE_END_0
pop local 1
pop constant 1
add
pop local 1
pop local 0
call Main.nextMask 1
pop local 0
pop local 1
pop constant 16
gt
not
not
if-goto IF_FALSE_0
pop argument 0
pop local 0
and
pop constant 0
eq
not
not
if-goto IF_FALSE_1
pop constant 8000
pop local 1
add
pop constant 1
call Memory.poke 2
pop temp 0
goto IF_END_1
label IF_FALSE_1
pop constant 8000
pop local 1
add
pop constant 0
call Memory.poke 2
pop temp 0
label IF_END_1
goto IF_END_0
label IF_FALSE_0
pop constant 0
pop local 2
label IF_END_0
goto WHILE_START_0
label WHILE_END_0
pop constant 0
return
function Main.nextMask 0
pop argument 0
pop constant 0
eq
not
if-goto IF_FALSE_2
pop constant 1
return
goto IF_END_2
label IF_FALSE_2
pop argument 0
pop constant 2
call Math.multiply 2
return
label IF_END_2
function Main.fillMemory 0
label WHILE_START_1
pop argument 1
pop constant 0
gt
not
if-goto WHILE_END_1
pop argument 0
pop argument 2
call Memory.poke 2
pop temp 0
pop argument 1
pop constant 1
sub
pop argument 1
pop argument 0
pop constant 1
add
pop argument 0
goto WHILE_START_1
label WHILE_END_1
pop constant 0
return
